name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test and Validate Pipeline
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Upgrade pip toolchain
        run: python -m pip install --upgrade pip wheel setuptools

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov black isort flake8 dvc

      - name: Lint (black)
        run: black --check src tests

      - name: Lint (isort)
        run: isort --check-only src tests

      - name: Lint (flake8)
        run: flake8 src tests

      - name: Create data directories
        run: mkdir -p data/raw data/processed models

      - name: Generate mock dataset
        run: |
          python - <<'PY'
          import pandas as pd, numpy as np, os
          np.random.seed(42); n = 1000
          df = pd.DataFrame({
              'ID': range(1, n+1),
              'LIMIT_BAL': np.random.randint(10000, 100000, n),
              'SEX': np.random.choice([1, 2], n),
              'EDUCATION': np.random.choice([1, 2, 3, 4], n),
              'MARRIAGE': np.random.choice([1, 2, 3], n),
              'AGE': np.random.randint(21, 70, n),
              'PAY_0': np.random.randint(-2, 3, n),
              'PAY_2': np.random.randint(-2, 3, n),
              'PAY_3': np.random.randint(-2, 3, n),
              'PAY_4': np.random.randint(-2, 3, n),
              'PAY_5': np.random.randint(-2, 3, n),
              'PAY_6': np.random.randint(-2, 3, n),
              'BILL_AMT1': np.random.randint(0, 50000, n),
              'BILL_AMT2': np.random.randint(0, 50000, n),
              'BILL_AMT3': np.random.randint(0, 50000, n),
              'BILL_AMT4': np.random.randint(0, 50000, n),
              'BILL_AMT5': np.random.randint(0, 50000, n),
              'BILL_AMT6': np.random.randint(0, 50000, n),
              'PAY_AMT1': np.random.randint(0, 10000, n),
              'PAY_AMT2': np.random.randint(0, 10000, n),
              'PAY_AMT3': np.random.randint(0, 10000, n),
              'PAY_AMT4': np.random.randint(0, 10000, n),
              'PAY_AMT5': np.random.randint(0, 10000, n),
              'PAY_AMT6': np.random.randint(0, 10000, n),
              'default.payment.next.month': np.random.choice([0, 1], n, p=[0.78, 0.22])
          })
          os.makedirs("data/raw", exist_ok=True)
          df.to_csv("data/raw/UCI_Credit_Card.csv", index=False)
          PY

      - name: Run data preparation
        run: python -m src.data.make_dataset

      - name: Run feature engineering
        run: python -m src.features.build_features

      - name: Run tests
        run: pytest -q --disable-warnings --maxfail=1

  build-docker:
    name: Build and Smoke-Test Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t credit-scoring-api:latest .

      - name: Smoke test container
        run: |
          docker run -d -p 8000:8000 --name test-api credit-scoring-api:latest
          sleep 8
          curl -f http://localhost:8000/health
          docker rm -f test-api

      - name: Save Docker image
        run: docker save credit-scoring-api:latest | gzip > credit-scoring-api.tar.gz

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: credit-scoring-api.tar.gz
          retention-days: 7
